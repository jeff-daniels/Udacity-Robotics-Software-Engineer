map_type: costmap

# The maximum range in meters at which to insert obstacles into the costmap
# using sensor data
obstacle_range: 2.5 # default is 2.5
# The maximum range in meters at which to raytrace out bostacles form the map 
# using sensor data
raytrace_range: 3.0 # default is 3.0


# The minimum height in meters of a sensor reading considered valid. This is 
# usually set to be at ground height, but can be set higher or lower based on 
# the noise model of your sensor.
min_obstacle_height: 0.0

# The maximum height in meters of a sensor reading considered valid. This is 
# usually set to be slightly higher than the height of the robot. Setting this 
# parameter to a value greater than the global max_obstacle_height parameter 
# has no effect. Setting this parameter to a value less than the global 
# max_obstacle_height will filter out points from this sensor above that height
max_obstacle_height: 2.0

# Time with which to post-date the transform that is published, to indicate 
# that this transform is valid into the future.
transform_tolerance: 0.2 # default is 0.1 seconds

# Robot dimensions are x=0.4, y=0.2, z=0.1, wheels are r=0.1
# This is roughly the hypotenuse of a 0.2 x 0.1 right triangle
robot_radius: 0.25

# Maximum distance from obstacles for paths
inflation_radius: 0.05 # default is 0.5
# Scaling factor to apply to cost values during inflation
cost_scaling_factor: 0.5 # default is 5.0

observation_sources: laser_scan_sensor

laser_scan_sensor: {sensor_frame: hokuyo, data_type: LaserScan, topic: my_robot/laser/scan, marking: true, clearing: true}
